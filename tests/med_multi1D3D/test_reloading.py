# -*- coding: utf-8 -*-
from __future__ import print_function, division
import os, math, glob
import pytest

import c3po.medcouplingCompat as mc

import c3po
import c3po.multi1D

from tests.med_1D3D.NeutroDriver import NeutroDriver
from tests.med_1D3D.ThermoDriver import ThermoDriver

refBu0 = [  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6880174599165405, 0.6880174599165405, 0.6880174599165426, 0.6880174599165427, 0.6880174599165405,
            0.6880174599165405, 0.6880174599165427, 0.6880174599165427, 0.6880174599165412, 0.6880174599165412, 0.6880174599165403, 0.6880174599165403,
            0.6880174599165412, 0.6880174599165412, 0.6880174599165403, 0.6880174599165403, 0.7952422775723342, 0.7952422775723342, 0.7952422775723355,
            0.7952422775723355, 0.7952422775723342, 0.7952422775723342, 0.7952422775723352, 0.7952422775723353, 0.7952422775723343, 0.7952422775723342,
            0.7952422775723305, 0.7952422775723303, 0.7952422775723342, 0.7952422775723342, 0.7952422775723303, 0.7952422775723305, 0.8585470824288501,
            0.8585470824288501, 0.8585470824288501, 0.8585470824288501, 0.8585470824288501, 0.8585470824288501, 0.8585470824288501, 0.8585470824288501,
            0.8585470824288491, 0.8585470824288491, 0.8585470824288532, 0.8585470824288532, 0.8585470824288493, 0.858547082428849, 0.8585470824288535,
            0.8585470824288535, 0.858512841971076, 0.8585128419710759, 0.858512841971076, 0.8585128419710761, 0.8585128419710759, 0.8585128419710759,
            0.8585128419710761, 0.8585128419710761, 0.8585128419710714, 0.8585128419710712, 0.8585128419710765, 0.8585128419710766, 0.8585128419710712,
            0.8585128419710712, 0.8585128419710766, 0.8585128419710766, 0.795355238557431, 0.795355238557431, 0.7953552385574316, 0.7953552385574316,
            0.795355238557431, 0.795355238557431, 0.7953552385574317, 0.7953552385574317, 0.795355238557431, 0.795355238557431, 0.7953552385574334,
            0.7953552385574332, 0.795355238557431, 0.795355238557431, 0.7953552385574333, 0.7953552385574333, 0.6877623444253187, 0.6877623444253187,
            0.6877623444253187, 0.6877623444253187, 0.6877623444253187, 0.6877623444253187, 0.6877623444253187, 0.6877623444253187, 0.6877623444253189,
            0.6877623444253189, 0.6877623444253191, 0.6877623444253191, 0.6877623444253189, 0.6877623444253189, 0.6877623444253191, 0.6877623444253191,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0]

refBu1 = [  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 1.3760691775296219, 1.3760691775296219, 0.6880517176130763, 0.6880517176130763, 1.3760691775296219, 1.3760691775296219,
            0.6880517176130764, 0.6880517176130764, 1.3760691775296228, 1.3760691775296228, 1.3760691775296194, 1.3760691775296194, 1.3760691775296228,
            1.3760691775296228, 1.3760691775296197, 1.3760691775296192, 1.590544618782409, 1.5905446187824093, 0.7953023412100774, 0.7953023412100775,
            1.5905446187824093, 1.5905446187824093, 0.7953023412100773, 0.7953023412100773, 1.5905446187824144, 1.5905446187824142, 1.590544618782407,
            1.590544618782407, 1.5905446187824142, 1.5905446187824142, 1.590544618782407, 1.590544618782407, 1.7171789402235413, 1.7171789402235413,
            0.8586318577946928, 0.8586318577946929, 1.7171789402235413, 1.7171789402235413, 0.8586318577946929, 0.8586318577946929, 1.7171789402235451,
            1.7171789402235451, 1.7171789402235418, 1.7171789402235418, 1.7171789402235453, 1.717178940223545, 1.717178940223542, 1.717178940223542,
            1.717110137188795, 1.717110137188795, 0.8585972952177238, 0.8585972952177238, 1.717110137188795, 1.717110137188795, 0.8585972952177238,
            0.8585972952177238, 1.7171101371887985, 1.7171101371887985, 1.7171101371887958, 1.7171101371887958, 1.7171101371887982, 1.7171101371887982,
            1.7171101371887956, 1.7171101371887956, 1.5907706890317599, 1.5907706890317597, 0.7954154504743236, 0.7954154504743236, 1.5907706890317597,
            1.5907706890317597, 0.7954154504743237, 0.7954154504743237, 1.590770689031758, 1.590770689031758, 1.590770689031759, 1.590770689031759,
            1.5907706890317581, 1.5907706890317583, 1.5907706890317592, 1.5907706890317592, 1.3755589803407196, 1.3755589803407193, 0.6877966359153995,
            0.6877966359153995, 1.3755589803407193, 1.3755589803407193, 0.6877966359153995, 0.6877966359153995, 1.3755589803407189, 1.375558980340719,
            1.375558980340719, 1.375558980340719, 1.3755589803407189, 1.3755589803407189, 1.375558980340719, 1.375558980340719, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

refBu2 = [  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 2.0641093645740565, 2.0641093645740565, 0.6880401870444406, 0.6880401870444406, 2.0641093645740565, 2.0641093645740565,
            0.6880401870444407, 0.6880401870444407, 1.3760919046575097, 1.3760919046575097, 2.064109364574057, 2.064109364574057, 1.3760919046575095,
            1.37609190465751, 2.064109364574057, 2.0641093645740565, 2.3858249801602565, 2.3858249801602565, 0.7952803613778429, 0.795280361377843,
            2.385824980160257, 2.3858249801602565, 0.7952803613778427, 0.7952803613778427, 1.5905827025879145, 1.5905827025879145, 2.3858249801602556,
            2.3858249801602556, 1.5905827025879142, 1.5905827025879142, 2.3858249801602556, 2.3858249801602556, 2.57577813027126, 2.57577813027126,
            0.8585991900477152, 0.8585991900477152, 2.5757781302712606, 2.5757781302712606, 0.8585991900477152, 0.8585991900477152, 1.7172310478424064,
            1.7172310478424064, 2.5757781302712615, 2.5757781302712615, 1.7172310478424064, 1.717231047842406, 2.575778130271262, 2.575778130271262,
            2.5756748783248, 2.5756748783248, 0.8585647411360022, 0.8585647411360022, 2.5756748783248, 2.5756748783248, 0.8585647411360022, 0.8585647411360022,
            1.7171620363537263, 1.717162036353726, 2.575674878324797, 2.575674878324797, 1.717162036353726, 1.717162036353726, 2.575674878324797,
            2.575674878324797, 2.386164119827409, 2.386164119827409, 0.7953934307956569, 0.7953934307956569, 2.386164119827409, 2.3861641198274093,
            0.7953934307956568, 0.795393430795657, 1.5908088812699803, 1.5908088812699803, 2.3861641198274164, 2.3861641198274164, 1.5908088812699805,
            1.5908088812699805, 2.3861641198274164, 2.386164119827417, 2.0633440978693995, 2.063344097869399, 0.6877851175286815, 0.6877851175286815,
            2.063344097869399, 2.063344097869399, 0.6877851175286815, 0.6877851175286815, 1.3755817534440813, 1.3755817534440813, 2.0633440978694004,
            2.063344097869401, 1.3755817534440813, 1.3755817534440813, 2.0633440978694004, 2.0633440978694004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

refBu3 = [  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 2.064136058658844, 2.064136058658844, 0.6880441540013345, 0.6880441540013345, 2.064136058658844, 2.064136058658844,
            0.6880441540013345, 0.6880441540013345, 1.376084341045776, 1.376084341045776, 2.7521535185753914, 2.7521535185753914, 1.3760843410457757,
            1.3760843410457761, 2.752153518575392, 2.7521535185753914, 2.3858711570678897, 2.38587115706789, 0.7952884544799748, 0.7952884544799748,
            2.38587115706789, 2.3858711570678897, 0.7952884544799745, 0.7952884544799748, 1.5905688158578193, 1.5905688158578193, 3.1811134346402326,
            3.181113434640232, 1.590568815857819, 1.5905688158578193, 3.1811134346402326, 3.1811134346402326, 2.57584276957514, 2.57584276957514,
            0.8586117217327336, 0.8586117217327336, 2.5758427695751402, 2.5758427695751402, 0.8586117217327337, 0.8586117217327337, 1.7172109117804553,
            1.7172109117804553, 3.434389852003998, 3.434389852003998, 1.7172109117804553, 1.7172109117804548, 3.4343898520039984, 3.4343898520039984,
            2.575739267906351, 2.575739267906351, 0.8585772315526241, 0.8585772315526241, 2.575739267906351, 2.575739267906351, 0.8585772315526241,
            0.8585772315526241, 1.717141972688627, 1.7171419726886272, 3.4342521098774244, 3.4342521098774244, 1.7171419726886272, 1.7171419726886272,
            3.434252109877424, 3.434252109877424, 2.3862104158101074, 2.3862104158101074, 0.7954015345401252, 0.7954015345401253, 2.3862104158101074,
            2.3862104158101074, 0.7954015345401253, 0.7954015345401253, 1.590794965335785, 1.590794965335785, 3.181565654367536, 3.1815656543675352,
            1.5907949653357851, 1.5907949653357853, 3.1815656543675357, 3.181565654367536, 2.0633708270029056, 2.063370827002905, 0.6877890735588239,
            0.6877890735588239, 2.063370827002905, 2.063370827002905, 0.6877890735588239, 0.6877890735588239, 1.3755741910875061, 1.3755741910875061,
            2.7511331714282234, 2.751133171428224, 1.3755741910875061, 1.3755741910875061, 2.7511331714282234, 2.7511331714282234, 0.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

refBu = [refBu0, refBu1, refBu2, refBu3]

def test_unit():
    from c3po.multi1D.shiftList import shiftList

    listToShift = [0, 1, 2, 3]
    shiftMap = [3, "out", 1, 2]
    shiftedFields = []
    shiftedFields.append(shiftList(listToShift, shiftMap))
    shiftedFields.append(shiftList(listToShift, shiftMap))
    shiftedFields.append(shiftList(listToShift, shiftMap))
    shiftedFields.append(shiftList(listToShift, shiftMap))

    assert shiftedFields == [[1], [2], [3], [0]]


class OneIterationCoupler(c3po.Coupler):
    def __init__(self, physics, exchangers, dataManagers=[]):
        c3po.Coupler.__init__(self, physics, exchangers, dataManagers)

    def solveTimeStep(self):
        self._physicsDrivers[0].solve()
        self._exchangers[0].exchange()
        self._physicsDrivers[1].solve()
        return self.getSolveStatus()


def test_cycles():
    myThermoDrivers = []
    for i in range(4):
        myThermoDrivers.append(ThermoDriver())
    myNeutroDriver = NeutroDriver()

    grid = c3po.multi1D.CartesianGrid([0.5] * 2, [0.5] * 2)
    grid.setCorrespondences(list(range(4)))

    myThermoDriver = c3po.multi1D.Multi1DPhysicsDriver(myThermoDrivers, grid)

    myRemapper = c3po.Remapper(meshAlignment=True, offset=[0., 0., -1.], rescaling=1. / 100., rotation=math.pi / 2., outsideCellsScreening=True)
    neutroToThermo = c3po.SharedRemapping(myRemapper, reverse=True)
    thermoToNeutro = c3po.SharedRemapping(myRemapper, reverse=False, defaultValue=273.15, linearTransform=(1., -273.15))

    dataCoupler = c3po.LocalDataManager()
    exchangerNeutro2Thermo = c3po.LocalExchanger(neutroToThermo, [(myNeutroDriver, "Power")], [(myThermoDriver, "Power")])
    exchangerThermo2Data = c3po.LocalExchanger(c3po.DirectMatching(), [(myThermoDriver, "Temperature")], [(dataCoupler, "Temperature")])
    exchangerData2Neutro = c3po.LocalExchanger(thermoToNeutro, [(dataCoupler, "Temperature")], [(myNeutroDriver, "Temperature")])

    oneIteration = OneIterationCoupler([myNeutroDriver, myThermoDriver], [exchangerNeutro2Thermo])

    mycoupler = c3po.FixedPointCoupler([oneIteration], [exchangerThermo2Data, exchangerData2Neutro], [dataCoupler])
    mycoupler.init()
    mycoupler.setDampingFactor(0.75)
    mycoupler.setConvergenceParameters(1E-5, 100)

    thermoTodataBu = c3po.SharedRemapping(myRemapper, reverse=False)
    dataBu = c3po.LocalDataManager()
    exchangerData2Bu = c3po.LocalExchanger(thermoTodataBu, [(myThermoDriver, "Burn-up")], [(dataBu, "Burn-up")])

    for thermo in myThermoDrivers:
        thermo.setT0(273.15)

    for icycle in range(4):
        mycoupler.initTimeStep(1.)
        mycoupler.solve()
        mycoupler.validateTimeStep()

        exchangerData2Bu.exchange()
        buField = dataBu.getOutputMEDDoubleField("Burn-up")
        resuBu = buField.getArray().toNumPyArray().tolist()
        assert len(refBu[icycle]) == len(resuBu)
        for i in range(len(refBu[icycle])):
            assert pytest.approx(resuBu[i], abs=1.E-3) == refBu[icycle][i]
        #mc.WriteField("BurnUp" + str(icycle) + ".med", buField, True)

        shiftMap = [3, "out", 1, 2]
        newThermo = myThermoDriver.shiftPhysicsDrivers(shiftMap)
        for thermo in newThermo:
            thermo.term()
            thermo.init()
        #There is no need to clean the exchangers here because the 3D mesh of myThermoDriver is not modified.

    mycoupler.term()

if __name__ == "__main__":
    test_unit()
    test_cycles()
